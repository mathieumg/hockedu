///////////////////////////////////////////////////////////////////////////
/// @file ArbreNoeudLibre.cpp
/// @author Michael Ferris
/// @date 2012-04-16
/// @version 1.0
///
/// @addtogroup inf2990 INF2990
/// @{
///////////////////////////////////////////////////////////////////////////

#include "ArbreNoeudLibre.h"


////////////////////////////////////////////////////////////////////////
///
/// @fn void ArbreNoeudLibre::vider()
///
/// Vide le conteneur d'enfants, mais ne les libèrent pas
///
///
/// @return void
///
////////////////////////////////////////////////////////////////////////
void ArbreNoeudLibre::vider()
{
	while (!enfants_.empty()) {
		NoeudAbstrait* enfantAEffacer = enfants_.front();
		detacherEnfant(enfantAEffacer);
	}
}

////////////////////////////////////////////////////////////////////////
///
/// @fn void ArbreNoeudLibre::effacer( const NoeudAbstrait* noeud )
///
/// Efface le noeud du conteneur de noeud, le noeud n'est pas libéré
///
/// @param[in] const NoeudAbstrait * noeud
///
/// @return void
///
////////////////////////////////////////////////////////////////////////
void ArbreNoeudLibre::effacer( const NoeudAbstrait* noeud )
{
	detacherEnfant(noeud);
}


///////////////////////////////////////////////////////////////////////////////
/// @}
///////////////////////////////////////////////////////////////////////////////


