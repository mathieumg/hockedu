/// This file is autogenerated by BuildPacketsDefinitions.py
/// DO NOT MODIFY DIRECTLY

#pragma once
#include "PacketsDefinitions.h"
#include "PacketReader.h"
#include "PacketBuilder.h"
void PacketDataChatMessage::ReceiveData(PacketReader& r)
{
    r >> mTimestamp >> mMessage >> mIsTargetGroup >> mGroupName >> mOrigin;
}

void PacketDataChatMessage::SendData(PacketBuilder& b)
{
    b << mTimestamp << mMessage << mIsTargetGroup << mGroupName << mOrigin;
}

void PacketDataEvent::ReceiveData(PacketReader& r)
{
    r >> mMessage >> mEventCode;
}

void PacketDataEvent::SendData(PacketBuilder& b)
{
    b << mMessage << mEventCode;
}

typedef PacketDataBase* (*PacketDataGenerator)();
PacketDataBase* createPacketDataChatMessage(){return new PacketDataChatMessage();}
PacketDataBase* createPacketDataEvent(){return new PacketDataEvent();}
const PacketDataGenerator generators[2] =            
{                                                           
    createPacketDataChatMessage,
    createPacketDataEvent,
};                                                          
PacketDataBase* CreatePacketData(PacketDataTypes t)             
{                                                               
    unsigned int i = t-PT_NONE-1;                                     
    return i < (NB_PACKETDATATYPE-PT_NONE) ? generators[i]() : NULL;                                     
}
std::string packetDataName[2] =                                     
{                                                                   
"PacketDataEvent",
"PacketDataChatMessage",
};                                                                  
                                                                    
std::string GetPacketDataName(PacketDataTypes t)                    
{                                                                   
    unsigned int i = t-PT_NONE-1;                                   
    return i < (NB_PACKETDATATYPE-PT_NONE) ? packetDataName[i] : "";
}                                                                   
