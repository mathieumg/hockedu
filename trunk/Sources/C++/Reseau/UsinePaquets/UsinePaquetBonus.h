//////////////////////////////////////////////////////////////////////////////
/// @file UsinePaquetBonus.h
/// @author Mathieu Parent
/// @date 2013-03-24
/// @version 1.0
///
/// @addtogroup razergame RazerGame
/// @{
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "UsinePaquet.h"
#include "../Paquets/PaquetBonus.h"


///////////////////////////////////////////////////////////////////////////
/// @class UsinePaquetBonus
/// @brief Classe Factory (Usine) pour les paquets de type Bonus
///
/// @author Mathieu Parent
/// @date 2013-03-24
///////////////////////////////////////////////////////////////////////////
class UsinePaquetBonus : public UsinePaquet
{
public:
    /// Constructeur par paramètres.
    inline UsinePaquetBonus();

	/// Fonction à surcharger pour la création d'un noeud.
	inline virtual Paquet* creerPaquet() const;


};


////////////////////////////////////////////////////////////////////////
///
/// @fn UsinePaquetBonus::UsinePaquetBonus()
///
/// Ce constructeur ne fait qu'appeler la version de la classe et base
/// et donner des valeurs par défaut aux variables membres..
///
/// @return Aucune (constructeur).
///
////////////////////////////////////////////////////////////////////////
inline UsinePaquetBonus::UsinePaquetBonus()
	: UsinePaquet()
{
}


////////////////////////////////////////////////////////////////////////
///
/// @fn Paquet* UsinePaquetBonus::creerNoeud() const
///
/// Cette fonction retourne un noeud nouvellement créé du type produit
/// par cette usine.
///
/// @return Le noeud nouvellement créé.
///
////////////////////////////////////////////////////////////////////////
Paquet* UsinePaquetBonus::creerPaquet() const
{
	return new PaquetBonus();
}


///////////////////////////////////////////////////////////////////////////////
/// @}
///////////////////////////////////////////////////////////////////////////////





