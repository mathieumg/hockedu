/// This file is autogenerated by BuildPacketsDefinitions.py
/// DO NOT MODIFY DIRECTLY

#pragma once

#include "Enum_Declarations.h"
#include <string>
#include "Vecteur.h"



class PacketReader;
class PacketBuilder;

class PacketDataBase{ public: virtual void ReceiveData(PacketReader& r) = 0; virtual void SendData(PacketBuilder& b) = 0; };

enum PacketDataTypes
{
    PT_NONE=666,
    PT_PACKETDATABONUS,
    PT_PACKETDATAGAMEEVENT,
};

class PacketDataBonus : public PacketDataBase
{
public:
    // Position du bonus
    Vecteur<float,3> mBonusPosition;

    //
    BonusType mBonusType;

    // Action a executer pour le bonus
    PaquetBonusAction mBonusAction;

    // Id de la game
    int mGameId, test2;

    void ReceiveData(PacketReader& r);
    void SendData(PacketBuilder& b);
};

class PacketDataGameEvent : public PacketDataBase
{
public:
    // GameId of the game you want to connect to
    int mGameId;

    // PlayerName1
    std::string mPlayer1Name;

    // PlayerName2
    std::string mPlayer2Name;

    // GameEvent
    GameEventCode mEvent;

    // If the event is specified on the left player
    bool mEventOnPlayerLeft;

    void ReceiveData(PacketReader& r);
    void SendData(PacketBuilder& b);
};

PacketDataBase* CreatePacketData(PacketDataTypes t);
